#include <stdio.h>
#include <string.h>

#define MAX_CONTACTS 100
#define MAX_NAME_LENGTH 50
#define MAX_PHONE_LENGTH 15
#define MAX_EMAIL_LENGTH 50

typedef struct {
    char name[MAX_NAME_LENGTH];
    char phone[MAX_PHONE_LENGTH];
    char email[MAX_EMAIL_LENGTH];
} Contact;

void addContact(Contact contacts[], int *num_contacts) {
    if (*num_contacts >= MAX_CONTACTS) {
        printf("Cannot add more contacts. Maximum limit reached.\n");
        return;
    }
    printf("Enter the name of contact %d: ", *num_contacts + 1);
    scanf("%s", contacts[*num_contacts].name);
    printf("Enter the phone number of contact %d: ", *num_contacts + 1);
    scanf("%s", contacts[*num_contacts].phone);
    printf("Enter the email of contact %d: ", *num_contacts + 1);
    scanf("%s", contacts[*num_contacts].email);
    (*num_contacts)++;
}

void displayContacts(Contact contacts[], int num_contacts) {
    printf("\nContact List:\n");
    for (int i = 0; i < num_contacts; i++) {
        printf("Name: %s, Phone: %s, Email: %s\n", contacts[i].name, contacts[i].phone, contacts[i].email);
    }
}

void searchContact(Contact contacts[], int num_contacts) {
    char search_name[MAX_NAME_LENGTH];
    printf("Enter the name to search: ");
    scanf("%s", search_name);
    for (int i = 0; i < num_contacts; i++) {
        if (strcmp(contacts[i].name, search_name) == 0) {
            printf("Contact found: Name: %s, Phone: %s, Email: %s\n", contacts[i].name, contacts[i].phone, contacts[i].email);
            return;
        }
    }
    printf("Contact not found.\n");
}

void deleteContact(Contact contacts[], int *num_contacts) {
    char delete_name[MAX_NAME_LENGTH];
    printf("Enter the name to delete: ");
    scanf("%s", delete_name);
    for (int i = 0; i < *num_contacts; i++) {
        if (strcmp(contacts[i].name, delete_name) == 0) {
            for (int j = i; j < *num_contacts - 1; j++) {
                contacts[j] = contacts[j + 1];
            }
            (*num_contacts)--;
            printf("Contact deleted.\n");
            return;
        }
    }
    printf("Contact not found.\n");
}

int main() {
    Contact contacts[MAX_CONTACTS];
    int num_contacts = 0;
    int choice;
    while (1) {
        printf("\nContact Management System\n");
        printf("1. Add Contact\n");
        printf("2. Display Contacts\n");
        printf("3. Search Contact\n");
        printf("4. Delete Contact\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                addContact(contacts, &num_contacts);
                break;
            case 2:
                displayContacts(contacts, num_contacts);
                break;
            case 3:
                searchContact(contacts, num_contacts);
                break;
            case 4:
                deleteContact(contacts, &num_contacts);
                break;
            case 5:
                return 0;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
    return 0;
}
